package org.jcodec.codecs.h264.decode;

import org.jcodec.codecs.h264.JAVCTestCase;
import org.junit.Test;

public class TestInterpolator extends JAVCTestCase {
	private int[] data = new int[] {
			167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71, 
			 23,  17, 152,  84,  47,  17,  45,   5,  88, 245, 107, 214, 136,   7, 153, 146, 
			 72,  51,  98,  65, 243,  13,  35, 229,  95,  48, 209, 200, 237,  97,  12,  75, 
			  2,  53,  57, 129, 132, 184,  20, 162, 156, 180,  90, 103,  42, 202, 229,  72, 
			233, 197, 241, 176, 196,  21, 138, 229, 155,  77,  57, 246, 247, 232, 161,   5, 
			211, 254, 237, 165, 213, 243, 217, 228,  91, 250, 108, 195,  81, 226,  32, 174, 
			 12, 225,   6, 152, 109,  97, 255,  52, 161,  30,  25, 253,  54,  80, 233, 183, 
			129, 143, 195,  58,  30,  15, 192,  44,  68,  85, 122, 200, 171,  80, 201, 178, 
			222, 178, 246, 181, 226,  76,  79, 221, 159, 136, 103, 189, 206,  31, 242,  97, 
			  0, 142, 120, 151, 151,  14,  52,  98,   7, 215,  94,  71, 161,  88,  41, 142, 
			 91, 162, 245,  98,  70, 134, 156, 196,  46,  54,  42,   2, 115,  18, 100, 230, 
			  6, 135, 239,  83,   9, 209,   8,  83,  79,  81, 248, 101, 143, 180, 240, 128, 
			183, 203,  25, 238, 154, 235, 215,  24, 204,  79, 162, 124, 140,  55, 223, 193, 
			173, 165, 209,  51, 209,  58, 190,   3, 240,  33, 233, 177, 183, 140, 203, 216, 
			 47, 127, 242, 179, 140, 109,  72, 208,  30,  72,  27,  45,  79, 175, 113, 113, 
			128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129
	};

	@Test
	public void testFullPel() throws Exception {
		
		int[] expected00 = new int[] {
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			 23,  23,  23,  23,  23,  23,  23,  23,  23,  17, 152,  84,  47,  17,  45,   5,  88, 245, 107, 214, 136,   7, 153, 146, 146, 146, 146, 146, 146, 146, 146, 146, 
			 72,  72,  72,  72,  72,  72,  72,  72,  72,  51,  98,  65, 243,  13,  35, 229,  95,  48, 209, 200, 237,  97,  12,  75,  75,  75,  75,  75,  75,  75,  75,  75, 
			  2,   2,   2,   2,   2,   2,   2,   2,   2,  53,  57, 129, 132, 184,  20, 162, 156, 180,  90, 103,  42, 202, 229,  72,  72,  72,  72,  72,  72,  72,  72,  72, 
			233, 233, 233, 233, 233, 233, 233, 233, 233, 197, 241, 176, 196,  21, 138, 229, 155,  77,  57, 246, 247, 232, 161,   5,   5,   5,   5,   5,   5,   5,   5,   5, 
			211, 211, 211, 211, 211, 211, 211, 211, 211, 254, 237, 165, 213, 243, 217, 228,  91, 250, 108, 195,  81, 226,  32, 174, 174, 174, 174, 174, 174, 174, 174, 174, 
			 12,  12,  12,  12,  12,  12,  12,  12,  12, 225,   6, 152, 109,  97, 255,  52, 161,  30,  25, 253,  54,  80, 233, 183, 183, 183, 183, 183, 183, 183, 183, 183, 
			129, 129, 129, 129, 129, 129, 129, 129, 129, 143, 195,  58,  30,  15, 192,  44,  68,  85, 122, 200, 171,  80, 201, 178, 178, 178, 178, 178, 178, 178, 178, 178, 
			222, 222, 222, 222, 222, 222, 222, 222, 222, 178, 246, 181, 226,  76,  79, 221, 159, 136, 103, 189, 206,  31, 242,  97,  97,  97,  97,  97,  97,  97,  97,  97, 
			  0,   0,   0,   0,   0,   0,   0,   0,   0, 142, 120, 151, 151,  14,  52,  98,   7, 215,  94,  71, 161,  88,  41, 142, 142, 142, 142, 142, 142, 142, 142, 142, 
			 91,  91,  91,  91,  91,  91,  91,  91,  91, 162, 245,  98,  70, 134, 156, 196,  46,  54,  42,   2, 115,  18, 100, 230, 230, 230, 230, 230, 230, 230, 230, 230, 
			  6,   6,   6,   6,   6,   6,   6,   6,   6, 135, 239,  83,   9, 209,   8,  83,  79,  81, 248, 101, 143, 180, 240, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
			183, 183, 183, 183, 183, 183, 183, 183, 183, 203,  25, 238, 154, 235, 215,  24, 204,  79, 162, 124, 140,  55, 223, 193, 193, 193, 193, 193, 193, 193, 193, 193, 
			173, 173, 173, 173, 173, 173, 173, 173, 173, 165, 209,  51, 209,  58, 190,   3, 240,  33, 233, 177, 183, 140, 203, 216, 216, 216, 216, 216, 216, 216, 216, 216, 
			 47,  47,  47,  47,  47,  47,  47,  47,  47, 127, 242, 179, 140, 109,  72, 208,  30,  72,  27,  45,  79, 175, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129 
		};
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);
		assertArrayEquals(expected00, cropImage(extractBand(actual, 0, 0, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
	
	public void testQPel10() throws Exception {
		int[] expected10 = new int[] {
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			 23,  23,  23,  23,  23,  23,  23,  26,  12,  54, 146,  71,  36,  27,  35,  11, 144, 211, 126, 214,  88,  37, 163, 144, 146, 146, 146, 146, 146, 146, 146, 146, 
			 72,  72,  72,  72,  72,  72,  72,  74,  64,  67,  79, 122, 199,   7,  96, 213,  62,  89, 213, 214, 211,  63,  25,  81,  74,  75,  75,  75,  75,  75,  75,  75, 
			  2,   2,   2,   2,   2,   2,   3,   1,  16,  53,  75, 129, 157, 137,  45, 169, 165, 158,  94,  81,  74, 229, 189,  62,  75,  72,  72,  72,  72,  72,  72,  72, 
			233, 233, 233, 233, 233, 233, 233, 236, 220, 210, 224, 189, 149,  32, 174, 219, 134,  57, 104, 251, 243, 223, 118,   3,   8,   5,   5,   5,   5,   5,   5,   5, 
			211, 211, 211, 211, 211, 211, 212, 208, 222, 255, 215, 171, 227, 235, 229, 183, 133, 220, 128, 162, 123, 180,  53, 186, 172, 174, 174, 174, 174, 174, 174, 174, 
			 12,  12,  12,  12,  12,  12,  16,   6,  81, 174,  28, 157,  88, 151, 206,  72, 142,  15,  97, 219,  34, 126, 230, 178, 184, 183, 183, 183, 183, 183, 183, 183, 
			129, 129, 129, 129, 129, 129, 129, 129, 127, 165, 166,  46,  15,  69, 165,  38,  75,  90, 144, 205, 138, 107, 204, 175, 179, 178, 178, 178, 178, 178, 178, 178, 
			222, 222, 222, 222, 222, 222, 222, 226, 206, 197, 230, 197, 195,  57, 121, 216, 151, 122, 119, 214, 147,  82, 222,  85, 100,  97,  97,  97,  97,  97,  97,  97, 
			  0,   0,   0,   0,   0,   0,   2,   0,  38, 144, 122, 163, 115,  11,  77,  63,  60, 202,  71,  98, 154,  64,  65, 149, 141, 142, 142, 142, 142, 142, 142, 142, 
			 91,  91,  91,  91,  91,  91,  92,  88, 102, 196, 215,  77,  86, 139, 176, 160,  38,  58,  23,  36,  96,  23, 139, 237, 228, 230, 230, 230, 230, 230, 230, 230, 
			  6,   6,   6,   6,   6,   6,   8,   3,  30, 178, 212,  42,  71, 168,  12,  93,  66, 133, 220,  99, 152, 204, 215, 120, 130, 128, 128, 128, 128, 128, 128, 128, 
			183, 183, 183, 183, 183, 183, 184, 179, 203, 145,  74, 228, 164, 245, 152,  67, 181,  92, 158, 133, 110,  94, 228, 189, 194, 193, 193, 193, 193, 193, 193, 193, 
			173, 173, 173, 173, 173, 173, 173, 174, 166, 188, 160,  92, 173,  95, 136,  65, 193,  70, 234, 176, 170, 152, 211, 216, 216, 216, 216, 216, 216, 216, 216, 216, 
			 47,  47,  47,  47,  47,  47,  49,  44,  59, 164, 234, 165, 135,  87, 116, 170,  31,  66,  28,  49, 109, 165, 108, 114, 113, 113, 113, 113, 113, 113, 113, 113, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129 
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected10, cropImage(extractBand(actual, 1, 0, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testHPel20() throws Exception {
		int[] expected20 = new int[] {
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			 23,  23,  23,  23,  23,  23,  23,  28,   1,  91, 139,  57,  25,  36,  24,  17, 199, 177, 144, 213,  40,  67, 172, 141, 146, 146, 146, 146, 146, 146, 146, 146, 
			 72,  72,  72,  72,  72,  72,  71,  76,  55,  82,  59, 178, 155,   0, 157, 196,  28, 129, 217, 227, 185,  28,  37,  86,  73,  75,  75,  75,  75,  75,  75,  75, 
			  2,   2,   2,   2,   2,   2,   4,   0,  29,  52,  93, 128, 181,  90,  70, 176, 174, 135,  97,  58, 106, 255, 149,  52,  77,  72,  72,  72,  72,  72,  72,  72, 
			233, 233, 233, 233, 233, 233, 232, 239, 207, 223, 207, 202, 101,  43, 210, 209, 112,  36, 151, 255, 238, 214,  75,   0,  10,   5,   5,   5,   5,   5,   5,   5, 
			211, 211, 211, 211, 211, 211, 212, 205, 232, 255, 192, 176, 240, 227, 240, 137, 174, 189, 148, 129, 165, 133,  74, 198, 170, 174, 174, 174, 174, 174, 174, 174, 
			 12,  12,  12,  12,  12,  12,  19,   0, 150, 123,  50, 162,  67, 205, 156,  92, 123,   0, 168, 184,  14, 172, 226, 172, 185, 183, 183, 183, 183, 183, 183, 183, 
			129, 129, 129, 129, 129, 129, 129, 129, 125, 187, 136,  33,   0, 122, 138,  31,  82,  94, 166, 209, 104, 133, 207, 171, 179, 178, 178, 178, 178, 178, 178, 178, 
			222, 222, 222, 222, 222, 222, 221, 230, 189, 216, 213, 212, 163,  38, 162, 210, 142, 108, 135, 238,  87, 132, 201,  72, 102,  97,  97,  97,  97,  97,  97,  97, 
			  0,   0,   0,   0,   0,   0,   4,   0,  75, 145, 124, 174,  78,   7, 102,  27, 113, 189,  47, 125, 146,  40,  88, 156, 139, 142, 142, 142, 142, 142, 142, 142, 
			 91,  91,  91,  91,  91,  91,  93,  85, 112, 230, 185,  56, 102, 144, 196, 124,  30,  62,   3,  69,  76,  27, 178, 244, 226, 230, 230, 230, 230, 230, 230, 230, 
			  6,   6,   6,   6,   6,   6,  10,   0,  53, 220, 185,   0, 132, 126,  15, 102,  52, 185, 191,  96, 160, 227, 190, 112, 132, 128, 128, 128, 128, 128, 128, 128, 
			183, 183, 183, 183, 183, 183, 184, 175, 222,  87, 122, 217, 174, 255,  88, 109, 158, 105, 153, 141,  79, 132, 232, 184, 194, 193, 193, 193, 193, 193, 193, 193, 
			173, 173, 173, 173, 173, 173, 173, 175, 159, 211, 111, 132, 136, 131,  82, 126, 145, 107, 234, 174, 157, 164, 219, 216, 216, 216, 216, 216, 216, 216, 216, 216, 
			 47,  47,  47,  47,  47,  47,  50,  41,  71, 201, 226, 151, 130,  65, 160, 131,  31,  59,  28,  52, 138, 155, 102, 115, 113, 113, 113, 113, 113, 113, 113, 113, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129 

		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected20, cropImage(extractBand(actual, 2, 0, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel30() throws Exception {
		int[] expected30 = new int[] {
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			 23,  23,  23,  23,  23,  23,  23,  26,   9, 122, 112,  52,  21,  41,  15,  53, 222, 142, 179, 175,  24, 110, 159, 144, 146, 146, 146, 146, 146, 146, 146, 146, 
			 72,  72,  72,  72,  72,  72,  72,  74,  53,  90,  62, 211,  84,  18, 193, 146,  38, 169, 209, 232, 141,  20,  56,  81,  74,  75,  75,  75,  75,  75,  75,  75, 
			  2,   2,   2,   2,   2,   2,   3,   1,  41,  55, 111, 130, 183,  55, 116, 166, 177, 113, 100,  50, 154, 242, 111,  62,  75,  72,  72,  72,  72,  72,  72,  72, 
			233, 233, 233, 233, 233, 233, 233, 236, 202, 232, 192, 199,  61,  91, 220, 182,  95,  47, 199, 251, 235, 188,  40,   3,   8,   5,   5,   5,   5,   5,   5,   5, 
			211, 211, 211, 211, 211, 211, 212, 208, 243, 246, 179, 195, 242, 222, 234, 114, 212, 149, 172, 105, 196,  83, 124, 186, 172, 174, 174, 174, 174, 174, 174, 174, 
			 12,  12,  12,  12,  12,  12,  16,   6, 188,  65, 101, 136,  82, 230, 104, 127,  77,  13, 211, 119,  47, 203, 205, 178, 184, 183, 183, 183, 183, 183, 183, 183, 
			129, 129, 129, 129, 129, 129, 129, 129, 134, 191,  97,  32,   8, 157,  91,  50,  84, 108, 183, 190,  92, 167, 193, 175, 179, 178, 178, 178, 178, 178, 178, 178, 
			222, 222, 222, 222, 222, 222, 222, 226, 184, 231, 197, 219, 120,  59, 192, 185, 139, 106, 162, 222,  59, 187, 149,  85, 100,  97,  97,  97,  97,  97,  97,  97, 
			  0,   0,   0,   0,   0,   0,   2,   0, 109, 133, 138, 163,  46,  30, 100,  17, 164, 142,  59, 143, 117,  41, 115, 149, 141, 142, 142, 142, 142, 142, 142, 142, 
			 91,  91,  91,  91,  91,  91,  92,  88, 137, 238, 142,  63, 118, 150, 196,  85,  42,  52,   3,  92,  47,  64, 204, 237, 228, 230, 230, 230, 230, 230, 230, 230, 
			  6,   6,   6,   6,   6,   6,   8,   3,  94, 230, 134,   5, 171,  67,  49,  91,  67, 217, 146, 120, 170, 234, 159, 120, 130, 128, 128, 128, 128, 128, 128, 128, 
			183, 183, 183, 183, 183, 183, 184, 179, 213,  56, 180, 186, 205, 235,  56, 157, 119, 134, 139, 141,  67, 178, 213, 189, 194, 193, 193, 193, 193, 193, 193, 193, 
			173, 173, 173, 173, 173, 173, 173, 174, 162, 210,  81, 171,  97, 161,  43, 183,  89, 170, 206, 179, 149, 184, 218, 216, 216, 216, 216, 216, 216, 216, 216, 216, 
			47,  47,  47,  47,  47,  47,  49,  44,  99, 222, 203, 146, 120,  69, 184,  81,  52,  43,  37,  66, 157, 134, 108, 114, 113, 113, 113, 113, 113, 113, 113, 113, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129 
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);
		assertArrayEquals(expected30, cropImage(extractBand(actual, 3, 0, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel01() throws Exception {
		int[] expected01 = new int[] {
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			165, 165, 165, 165, 165, 165, 165, 165, 165, 238, 216,  43, 129, 197, 214, 250,  68,  80, 152,  87, 140, 223, 179,  72,  72,  72,  72,  72,  72,  72,  72,  72, 
			177, 177, 177, 177, 177, 177, 177, 177, 177, 248, 220,  39, 139, 212, 227, 255,  66,  64, 157,  77, 142, 241, 179,  65,  65,  65,  65,  65,  65,  65,  65,  65, 
			127, 127, 127, 127, 127, 127, 127, 127, 127, 183, 204,  55,  96, 157, 174, 177,  73, 134, 133, 117, 130, 168, 185,  94,  94,  94,  94,  94,  94,  94,  94,  94, 
			 34,  34,  34,  34,  34,  34,  34,  34,  34,  14, 140,  79,  99,   9,  35,  51,  87, 197, 137, 227, 177,  10, 102, 132, 132, 132, 132, 132, 132, 132, 132, 132, 
			 45,  45,  45,  45,  45,  45,  45,  45,  45,  49,  74,  76, 225,  72,  27, 226, 110,  75, 189, 163, 179, 131,  60,  76,  76,  76,  76,  76,  76,  76,  76,  76, 
			 53,  53,  53,  53,  53,  53,  53,  53,  53,  85,  98, 146, 136, 138,  45, 169, 165, 152,  68, 137,  90, 213, 239,  46,  46,  46,  46,  46,  46,  46,  46,  46, 
			244, 244, 244, 244, 244, 244, 244, 244, 244, 221, 248, 175, 212,  72, 162, 242, 132, 127,  77, 240, 225, 240, 108,  43,  43,  43,  43,  43,  43,  43,  43,  43, 
			151, 151, 151, 151, 151, 151, 151, 151, 151, 254, 165, 168, 195, 229, 232, 186, 112, 205,  85, 207,  54, 188,  78, 187, 187, 187, 187, 187, 187, 187, 187, 187, 
			 20,  20,  20,  20,  20,  20,  20,  20,  20, 199,  34, 120,  69,  59, 247,  26, 135,  26,  45, 243,  82,  75, 234, 186, 186, 186, 186, 186, 186, 186, 186, 186, 
			178, 178, 178, 178, 178, 178, 178, 178, 178, 150, 225,  84,  79,  33, 163, 100,  94,  97, 125, 200, 190,  66, 220, 156, 156, 156, 156, 156, 156, 156, 156, 156, 
			164, 164, 164, 164, 164, 164, 164, 164, 164, 171, 207, 186, 225,  60,  58, 194, 126, 169, 105, 166, 199,  49, 194,  96,  96,  96,  96,  96,  96,  96,  96,  96, 
			 16,  16,  16,  16,  16,  16,  16,  16,  16, 147, 140, 138, 129,  35,  91, 118,   6, 177,  67,  41, 145,  63,  34, 176, 176, 176, 176, 176, 176, 176, 176, 176, 
			 68,  68,  68,  68,  68,  68,  68,  68,  68, 152, 250,  79,  43, 157, 113, 179,  52,  49,  97,  24, 121,  63, 143, 206, 206, 206, 206, 206, 206, 206, 206, 206, 
			 42,  42,  42,  42,  42,  42,  42,  42,  42, 152, 172, 136,  38, 230,  49,  64, 106,  88, 233, 109, 141, 155, 244, 134, 134, 134, 134, 134, 134, 134, 134, 134, 
			202, 202, 202, 202, 202, 202, 202, 202, 202, 200,  55, 194, 183, 189, 234,  12, 230,  66, 186, 147, 159,  62, 222, 211, 211, 211, 211, 211, 211, 211, 211, 211, 
			133, 133, 133, 133, 133, 133, 133, 133, 133, 154, 232,  65, 189,  56, 145,  55, 175,  35, 180, 141, 150, 165, 176, 190, 190, 190, 190, 190, 190, 190, 190, 190, 
			 60,  60,  60,  60,  60,  60,  60,  60,  60, 117, 235, 206, 153, 127, 108, 218,  69,  96,  44,  62, 110, 140, 122, 110, 110, 110, 110, 110, 110, 110, 110, 110, 
			135, 135, 135, 135, 135, 135, 135, 135, 135,  94, 213, 244, 217, 161, 250, 192, 248, 160, 159, 159, 243,  20, 176, 132, 132, 132, 132, 132, 132, 132, 132, 132, 
			127, 127, 127, 127, 127, 127, 127, 127, 127,  96, 216, 241, 210, 157, 242, 196, 238, 154, 146, 149, 230,  32, 170, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129 
		};

		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected01, cropImage(extractBand(actual, 0, 1, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel11() throws Exception {
		int[] expected11 = new int[] {
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			165, 165, 165, 165, 165, 165, 166, 160, 183, 245, 165,  50, 154, 199, 233, 206,  52, 107, 137,  90, 167, 222, 147,  66,  74,  72,  72,  72,  72,  72,  72,  72, 
			177, 177, 177, 177, 177, 177, 178, 172, 195, 255, 169,  47, 164, 213, 246, 211,  51,  91, 142,  79, 169, 240, 147,  59,  67,  65,  65,  65,  65,  65,  65,  65, 
			127, 127, 127, 127, 127, 127, 128, 122, 145, 190, 153,  62, 121, 159, 193, 133,  58, 161, 118, 119, 157, 167, 153,  88,  96,  94,  94,  94,  94,  94,  94,  94, 
			 34,  34,  34,  34,  34,  34,  34,  37,  23,  51, 134,  65,  88,  18,  24,  57, 143, 163, 155, 227, 129,  40, 111, 130, 132, 132, 132, 132, 132, 132, 132, 132, 
			 45,  45,  45,  45,  45,  45,  45,  47,  37,  65,  55, 133, 181,  66,  88, 210,  76, 116, 193, 177, 153,  96,  73,  81,  75,  76,  76,  76,  76,  76,  76,  76, 
			 53,  53,  53,  53,  53,  53,  54,  52,  67,  84, 116, 145, 160,  91,  70, 176, 174, 129,  72, 115, 122, 240, 199,  36,  49,  46,  46,  46,  46,  46,  46,  46, 
			244, 244, 244, 244, 244, 244, 244, 247, 231, 234, 231, 188, 164,  83, 198, 232, 111, 106, 124, 244, 221, 231,  65,  40,  45,  43,  43,  43,  43,  43,  43,  43, 
			151, 151, 151, 151, 151, 151, 151, 148, 161, 254, 143, 174, 209, 221, 244, 141, 154, 175, 105, 174,  96, 142,  99, 199, 185, 187, 187, 187, 187, 187, 187, 187, 
			 20,  20,  20,  20,  20,  20,  24,  14,  89, 148,  56, 125,  48, 113, 198,  46, 116,  11, 116, 209,  62, 121, 231, 180, 187, 186, 186, 186, 186, 186, 186, 186, 
			178, 178, 178, 178, 178, 178, 178, 178, 176, 172, 196,  72,  64,  87, 136,  93, 101, 102, 147, 204, 156,  92, 223, 153, 157, 156, 156, 156, 156, 156, 156, 156, 
			164, 164, 164, 164, 164, 164, 163, 168, 147, 190, 191, 201, 194,  41,  99, 188, 118, 155, 121, 190, 139, 100, 173,  84,  99,  96,  96,  96,  96,  96,  96,  96, 
			 16,  16,  16,  16,  16,  16,  18,  16,  53, 149, 142, 149,  93,  32, 116,  83,  59, 164,  43,  68, 137,  39,  57, 183, 174, 176, 176, 176, 176, 176, 176, 176, 
			 68,  68,  68,  68,  68,  68,  69,  65,  78, 186, 220,  58,  59, 162, 133, 143,  44,  53,  78,  57, 101,  67, 182, 213, 204, 206, 206, 206, 206, 206, 206, 206, 
			 42,  42,  42,  42,  42,  42,  44,  39,  66, 195, 145,  94, 100, 189,  52,  74,  93, 140, 204, 106, 149, 179, 219, 126, 136, 134, 134, 134, 134, 134, 134, 134, 
			202, 202, 202, 202, 202, 202, 203, 198, 222, 142, 104, 184, 193, 199, 171,  55, 207,  79, 182, 156, 129, 100, 226, 207, 212, 211, 211, 211, 211, 211, 211, 211, 
			133, 133, 133, 133, 133, 133, 133, 134, 126, 177, 183, 106, 152,  93,  91, 116, 127,  72, 180, 139, 137, 177, 184, 190, 190, 190, 190, 190, 190, 190, 190, 190, 
			 60,  60,  60,  60,  60,  60,  61,  57,  72, 154, 227, 192, 148, 105, 152, 180,  70,  90,  44,  66, 140, 130, 117, 111, 110, 110, 110, 110, 110, 110, 110, 110, 
			135, 135, 135, 135, 135, 135, 135, 139, 120, 120, 229, 241, 195, 183, 240, 204, 231, 153, 152, 194, 188,  44, 178, 127, 132, 132, 132, 132, 132, 132, 132, 132, 
			127, 127, 127, 127, 127, 127, 126, 131, 111, 122, 232, 238, 189, 180, 232, 208, 220, 147, 139, 184, 175,  56, 172, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected11, cropImage(extractBand(actual, 1, 1, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel21() throws Exception {
		int[] expected21 = new int[] {
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			165, 165, 165, 165, 165, 165, 167, 155, 199, 255, 116,  57, 179, 201, 253, 164,  39, 133, 124,  92, 192, 223, 117,  61,  76,  72,  72,  72,  72,  72,  72,  72, 
			177, 177, 177, 177, 177, 177, 179, 166, 215, 255, 113,  59, 193, 213, 255, 178,  23, 128, 123,  83, 206, 235, 111,  53,  69,  65,  65,  65,  65,  65,  65,  65, 
			127, 127, 127, 127, 127, 127, 129, 121, 148, 216, 127,  49, 134, 168, 189, 117,  90, 147, 122, 117, 146, 192, 140,  83,  97,  94,  94,  94,  94,  94,  94,  94, 
			 34,  34,  34,  34,  34,  34,  34,  41,   6,  83, 120,  92,  45,  18,  51,  55, 157, 166, 172, 234,  74,  34, 134, 134, 131, 132, 132, 132, 132, 132, 132, 132, 
			 45,  45,  45,  45,  45,  45,  45,  46,  44,  67,  55, 168, 179,  17, 139, 202,  57, 136, 188, 168, 167,  87,  61,  80,  75,  76,  76,  76,  76,  76,  76,  76, 
			 53,  53,  53,  53,  53,  53,  54,  52,  69,  89, 124, 143, 150,  76,  95, 184, 166,  99, 103, 110, 134, 255, 142,  26,  52,  46,  46,  46,  46,  46,  46,  46, 
			244, 244, 244, 244, 244, 244, 244, 247, 230, 239, 220, 200, 140,  84, 233, 196, 124,  84, 154, 241, 240, 185,  59,  45,  45,  43,  43,  43,  43,  43,  43,  43, 
			151, 151, 151, 151, 151, 151, 154, 135, 213, 220, 150, 181, 214, 238, 221, 128, 170, 139, 152, 130, 115, 141, 115, 204, 184, 187, 187, 187, 187, 187, 187, 187, 
			 20,  20,  20,  20,  20,  20,  26,   3, 133, 127,  57, 118,  34, 185, 144,  61, 105,   2, 170, 193,  30, 165, 230, 175, 187, 186, 186, 186, 186, 186, 186, 186, 
			178, 178, 178, 178, 178, 178, 177, 184, 149, 206, 170,  71,  44, 100, 150,  86,  96, 102, 163, 223, 103, 136, 211, 143, 158, 156, 156, 156, 156, 156, 156, 156, 
			164, 164, 164, 164, 164, 164, 164, 164, 162, 194, 191, 222, 152,  19, 140, 170, 145, 137, 117, 215, 105, 114, 168,  80, 100,  96,  96,  96,  96,  96,  96,  96, 
			 16,  16,  16,  16,  16,  16,  20,   8,  82, 160, 132, 147,  75,  44, 134,  39,  90, 153,  24, 103, 126,  20, 104, 194, 171, 176, 176, 176, 176, 176, 176, 176, 
			 68,  68,  68,  68,  68,  68,  70,  61,  90, 243, 194,  28, 109, 138, 153, 127,  24,  89,  53,  72,  98,  84, 186, 211, 204, 206, 206, 206, 206, 206, 206, 206, 
			 42,  42,  42,  42,  42,  42,  46,  33,  94, 177, 171,  56, 147, 166,  22, 100,  80, 174, 186, 106, 141, 214, 199, 117, 137, 134, 134, 134, 134, 134, 134, 134, 
			202, 202, 202, 202, 202, 202, 202, 198, 224, 110, 109, 211, 168, 243,  90, 115, 171, 103, 183, 162,  93, 130, 240, 205, 212, 211, 211, 211, 211, 211, 211, 211, 
			133, 133, 133, 133, 133, 133, 134, 133, 129, 222, 139, 123, 129,  96,  96, 123, 103,  92, 182, 135, 160, 170, 184, 191, 190, 190, 190, 190, 190, 190, 190, 190, 
			 60,  60,  60,  60,  60,  60,  62,  56,  73, 185, 239, 175, 140,  98, 181, 153,  68,  77,  41,  86, 132, 135, 113, 110, 111, 110, 110, 110, 110, 110, 110, 110, 
			135, 135, 135, 135, 135, 135, 134, 144, 100, 144, 247, 240, 170, 213, 227, 226, 219, 148, 144, 234, 121,  73, 181, 121, 133, 132, 132, 132, 132, 132, 132, 132, 
			127, 127, 127, 127, 127, 127, 126, 135,  97, 148, 247, 234, 167, 201, 223, 219, 204, 141, 133, 219, 122,  79, 173, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129 
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected21, cropImage(extractBand(actual, 2, 1, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel31() throws Exception {
		int[] expected31 = new int[] {
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			165, 165, 165, 165, 165, 165, 166, 160, 218, 235,  79,  92, 188, 207, 251, 117,  59, 142, 106, 115, 207, 202,  95,  66,  74,  72,  72,  72,  72,  72,  72,  72, 
			177, 177, 177, 177, 177, 177, 178, 172, 229, 239,  76, 102, 202, 220, 255, 116,  43, 147,  96, 117, 225, 202,  88,  59,  67,  65,  65,  65,  65,  65,  65,  65, 
			127, 127, 127, 127, 127, 127, 128, 122, 164, 223,  91,  59, 148, 167, 177, 123, 113, 123, 136, 105, 152, 208, 117,  88,  96,  94,  94,  94,  94,  94,  94,  94, 
			 34,  34,  34,  34,  34,  34,  34,  37,   6, 110, 106, 104,  13,  30,  60,  52, 174, 172, 192, 215,  26,  59, 145, 130, 132, 132, 132, 132, 132, 132, 132, 132, 
			 45,  45,  45,  45,  45,  45,  45,  47,  51,  66,  73, 193, 143,  10, 190, 160,  65, 149, 172, 174, 175,  68,  57,  81,  75,  76,  76,  76,  76,  76,  76,  76, 
			 53,  53,  53,  53,  53,  53,  54,  52,  73,  96, 128, 134, 137,  80, 123, 175, 149,  91, 134,  98, 165, 252,  85,  36,  49,  46,  46,  46,  46,  46,  46,  46, 
			244, 244, 244, 244, 244, 244, 244, 247, 226, 239, 190, 215, 112, 115, 233, 159, 144,  66, 192, 229, 243, 135,  78,  40,  45,  43,  43,  43,  43,  43,  43,  43, 
			151, 151, 151, 151, 151, 151, 151, 148, 243, 174, 182, 177, 228, 237, 192, 135, 167, 125, 184,  78, 158, 129, 137, 199, 185, 187, 187, 187, 187, 187, 187, 187, 
			 20,  20,  20,  20,  20,  20,  24,  14, 162,  92,  69,  96,  44, 222,  78, 101,  72,  32, 201, 147,  42, 204, 207, 180, 187, 186, 186, 186, 186, 186, 186, 186, 
			178, 178, 178, 178, 178, 178, 178, 178, 141, 221, 123,  81,  26, 128, 147,  76,  96, 111, 183, 209,  78, 186, 171, 153, 157, 156, 156, 156, 156, 156, 156, 156, 
			164, 164, 164, 164, 164, 164, 163, 168, 177, 192, 202, 218, 103,  37, 164, 152, 172, 107, 139, 215,  77, 139, 148,  84,  99,  96,  96,  96,  96,  96,  96,  96, 
			 16,  16,  16,  16,  16,  16,  18,  16, 114, 152, 124, 141,  67,  68, 120,  16, 126, 114,  29, 127,  92,  33, 149, 183, 174, 176, 176, 176, 176, 176, 176, 176, 
			 68,  68,  68,  68,  68,  68,  69,  65, 127, 243, 123,  36, 141, 107, 179,  91,  37, 107,  24,  98,  92, 106, 180, 213, 204, 206, 206, 206, 206, 206, 206, 206, 
			 42,  42,  42,  42,  42,  42,  44,  39, 111, 163, 187,  34, 192, 108,  30, 118,  74, 201, 154, 117, 145, 237, 165, 126, 136, 134, 134, 134, 134, 134, 134, 134, 
			202, 202, 202, 202, 202, 202, 203, 198, 210,  86, 136, 215, 159, 254,  44, 182, 106, 158, 162, 160,  74, 176, 231, 207, 212, 211, 211, 211, 211, 211, 211, 211, 
			133, 133, 133, 133, 133, 133, 133, 134, 151, 233,  95, 150,  95, 116,  94, 118,  91, 117, 169, 146, 174, 157, 191, 190, 190, 190, 190, 190, 190, 190, 190, 190, 
			 60,  60,  60,  60,  60,  60,  61,  57,  89, 214, 229, 158, 138, 105, 194, 120,  76,  60,  54,  97, 121, 143, 105, 111, 110, 110, 110, 110, 110, 110, 110, 110, 
			135, 135, 135, 135, 135, 135, 135, 139,  95, 179, 247, 229, 166, 229, 206, 238, 185, 156, 151, 238,  66, 129, 154, 127, 132, 132, 132, 132, 132, 132, 132, 132, 
			127, 127, 127, 127, 127, 127, 126, 131,  97, 182, 244, 222, 162, 221, 210, 227, 179, 143, 141, 224,  78, 123, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected31, cropImage(extractBand(actual, 3, 1, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testHPel02() throws Exception {
		int[] expected02 = new int[] {
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			163, 163, 163, 163, 163, 163, 163, 163, 163, 234, 215,  43, 127, 194, 211, 246,  68,  82, 151,  89, 140, 219, 178,  73,  73,  73,  73,  73,  73,  73,  73,  73, 
			187, 187, 187, 187, 187, 187, 187, 187, 187, 255, 223,  36, 147, 223, 237, 255,  65,  50, 161,  68, 144, 255, 178,  59,  59,  59,  59,  59,  59,  59,  59,  59, 
			 87,  87,  87,  87,  87,  87,  87,  87,  87, 125, 190,  67,  61, 114, 131,  99,  79, 190, 113, 148, 119, 109, 190, 117, 117, 117, 117, 117, 117, 117, 117, 117, 
			 45,  45,  45,  45,  45,  45,  45,  45,  45,  10, 128,  73, 151,   0,  24,  96,  86, 148, 166, 240, 217,  12,  50, 118, 118, 118, 118, 118, 118, 118, 118, 118, 
			 18,  18,  18,  18,  18,  18,  18,  18,  18,  47,  50,  87, 207, 131,  19, 223, 124, 102, 169, 126, 121, 164, 108,  76,  76,  76,  76,  76,  76,  76,  76,  76, 
			104, 104, 104, 104, 104, 104, 104, 104, 104, 116, 139, 162, 139,  92,  69, 175, 173, 123,  46, 171, 137, 224, 249,  20,  20,  20,  20,  20,  20,  20,  20,  20, 
			255, 255, 255, 255, 255, 255, 255, 255, 255, 245, 255, 173, 227, 122, 186, 255, 109, 176,  96, 233, 203, 248,  55,  80,  80,  80,  80,  80,  80,  80,  80,  80, 
			 90,  90,  90,  90,  90,  90,  90,  90,  90, 253,  93, 171, 177, 215, 247, 144, 133, 160,  61, 219,  27, 150, 124, 200, 200, 200, 200, 200, 200, 200, 200, 200, 
			 28,  28,  28,  28,  28,  28,  28,  28,  28, 173,  61,  87,  29,  21, 239,   0, 109,  21,  64, 233, 109,  70, 235, 188, 188, 188, 188, 188, 188, 188, 188, 188, 
			227, 227, 227, 227, 227, 227, 227, 227, 227, 156, 255, 110, 128,  51, 133, 155, 120, 109, 127, 199, 208,  51, 238, 134, 134, 134, 134, 134, 134, 134, 134, 134, 
			105, 105, 105, 105, 105, 105, 105, 105, 105, 164, 168, 190, 224,  43,  36, 166,  93, 201, 106, 142, 191,  67, 145,  95,  95,  95,  95,  95,  95,  95,  95,  95, 
			 31,  31,  31,  31,  31,  31,  31,  31,  31, 152, 159, 124, 107,  56, 129, 138,   4, 139,  39,  10, 128,  38,  26, 209, 209, 209, 209, 209, 209, 209, 209, 209, 
			 44,  44,  44,  44,  44,  44,  44,  44,  44, 142, 255,  60,  15, 180,  69, 162,  58,  44, 152,  45, 126, 107, 185, 181, 181, 181, 181, 181, 181, 181, 181, 181, 
			 78,  78,  78,  78,  78,  78,  78,  78,  78, 169, 105, 188,  67, 251,  89,  45, 133,  95, 217, 116, 138, 130, 247, 139, 139, 139, 139, 139, 139, 139, 139, 139, 
			221, 221, 221, 221, 221, 221, 221, 221, 221, 197,  85, 150, 212, 143, 253,   0, 255,  53, 210, 170, 178,  68, 220, 229, 229, 229, 229, 229, 229, 229, 229, 229, 
			 93,  93,  93,  93,  93,  93,  93,  93,  93, 143, 255,  79, 168,  54, 100, 106, 109,  36, 126, 104, 117, 190, 149, 163, 163, 163, 163, 163, 163, 163, 163, 163, 
			 72,  72,  72,  72,  72,  72,  72,  72,  72, 107, 227, 232, 165, 145, 144, 228, 108, 120,  60,  79, 141, 104, 131, 107, 107, 107, 107, 107, 107, 107, 107, 107, 
			142, 142, 142, 142, 142, 142, 142, 142, 142,  92, 211, 246, 222, 163, 255, 188, 255, 164, 170, 167, 254,  10, 181, 134, 134, 134, 134, 134, 134, 134, 134, 134, 
			125, 125, 125, 125, 125, 125, 125, 125, 125,  96, 216, 240, 209, 156, 239, 196, 234, 152, 144, 147, 227,  34, 169, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129 

		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);
		assertArrayEquals(expected02, cropImage(extractBand(actual, 0, 2, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel12() throws Exception {
		int[] expected12 = new int[] {
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			163, 163, 163, 163, 163, 163, 164, 158, 179, 245, 166,  50, 152, 196, 231, 204,  55, 108, 138,  91, 165, 220, 148,  68,  75,  73,  73,  73,  73,  73,  73,  73, 
			187, 187, 187, 187, 187, 187, 188, 181, 208, 255, 167,  48, 176, 223, 246, 223,  38,  87, 142,  72, 181, 250, 142,  53,  61,  59,  59,  59,  59,  59,  59,  59, 
			 87,  87,  87,  87,  87,  87,  88,  86,  91, 151, 164,  54,  74, 124, 127,  84, 111, 176, 117, 146, 108, 134, 177, 112, 119, 117, 117, 117, 117, 117, 117, 117, 
			 45,  45,  45,  45,  45,  45,  45,  50,  28,  42, 115, 100, 108,   0,  51,  94, 100, 152, 183, 248, 162,   6,  73, 122, 117, 118, 118, 118, 118, 118, 118, 118, 
			 18,  18,  18,  18,  18,  18,  19,  17,  26,  49,  50, 123, 205,  82,  70, 215, 105, 122, 164, 118, 135, 155,  96,  75,  77,  76,  76,  76,  76,  76,  76,  76, 
			104, 104, 104, 104, 104, 104, 104, 104, 106, 121, 147, 160, 129,  77,  94, 184, 166,  93,  77, 167, 150, 240, 192,  10,  24,  20,  20,  20,  20,  20,  20,  20, 
			255, 255, 255, 255, 255, 255, 255, 255, 254, 250, 244, 186, 203, 124, 221, 219, 123, 154, 127, 230, 223, 202,  49,  85,  80,  80,  80,  80,  80,  80,  80,  80, 
			 90,  90,  90,  90,  90,  90,  93,  77, 142, 219, 101, 178, 182, 232, 224, 131, 149, 124, 108, 175,  46, 150, 140, 205, 199, 200, 200, 200, 200, 200, 200, 200, 
			 28,  28,  28,  28,  28,  28,  30,  17,  72, 152,  62,  80,  15,  93, 185,  15,  98,  12, 118, 217,  78, 114, 234, 183, 189, 188, 188, 188, 188, 188, 188, 188, 
			227, 227, 227, 227, 227, 227, 226, 233, 200, 191, 229, 109, 108,  65, 147, 148, 115, 109, 143, 218, 155,  95, 226, 125, 136, 134, 134, 134, 134, 134, 134, 134, 
			105, 105, 105, 105, 105, 105, 106, 102, 120, 168, 168, 211, 183,  22,  77, 148, 120, 184, 103, 167, 157,  81, 140,  91,  96,  95,  95,  95,  95,  95,  95,  95, 
			 31,  31,  31,  31,  31,  31,  33,  24,  60, 164, 149, 122,  90,  69, 147,  94,  36, 128,  20,  45, 117,  19,  73, 221, 206, 209, 209, 209, 209, 209, 209, 209, 
			 44,  44,  44,  44,  44,  44,  46,  41,  56, 199, 229,  30,  66, 156,  89, 146,  38,  80, 127,  60, 123, 124, 190, 180, 181, 181, 181, 181, 181, 181, 181, 181, 
			 78,  78,  78,  78,  78,  78,  80,  72, 106, 152, 131, 150, 114, 228,  59,  71, 121, 129, 199, 116, 130, 166, 228, 131, 141, 139, 139, 139, 139, 139, 139, 139, 
			221, 221, 221, 221, 221, 221, 221, 221, 223, 165,  90, 178, 187, 187, 173,  61, 220,  77, 211, 177, 143,  98, 234, 228, 229, 229, 229, 229, 229, 229, 229, 229, 
			 93,  93,  93,  93,  93,  93,  94,  92,  96, 188, 211,  96, 145,  57, 105, 113,  85,  56, 128, 100, 140, 183, 149, 165, 163, 163, 163, 163, 163, 163, 163, 163, 
			 72,  72,  72,  72,  72,  72,  73,  72,  74, 138, 239, 215, 158, 138, 173, 202, 106, 107,  57, 100, 133, 109, 128, 106, 108, 107, 107, 107, 107, 107, 107, 107, 
			142, 142, 142, 142, 142, 142, 142, 147, 123, 116, 229, 246, 197, 193, 243, 210, 244, 159, 162, 207, 187,  39, 184, 129, 135, 134, 134, 134, 134, 134, 134, 134, 
			125, 125, 125, 125, 125, 125, 125, 129, 111, 122, 231, 237, 188, 177, 231, 207, 218, 146, 138, 182, 175,  57, 171, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected12, cropImage(extractBand(actual, 1, 2, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testHPel22() throws Exception {
		int[] expected22 = new int[] {
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			163, 163, 163, 163, 163, 163, 165, 153, 195, 255, 116,  57, 176, 198, 251, 161,  41, 133, 124,  93, 190, 220, 118,  62,  77,  73,  73,  73,  73,  73,  73,  73, 
			187, 187, 187, 187, 187, 187, 189, 175, 228, 255, 110,  60, 204, 222, 255, 190,  10, 124, 123,  75, 218, 244, 105,  47,  63,  59,  59,  59,  59,  59,  59,  59, 
			 87,  87,  87,  87,  87,  87,  88,  84,  94, 177, 138,  40,  87, 133, 122,  68, 143, 161, 121, 144,  97, 158, 164, 106, 120, 117, 117, 117, 117, 117, 117, 117, 
			 45,  45,  45,  45,  45,  45,  44,  54,  11,  74, 101, 126,  64,   0,  77,  92, 114, 155, 200, 255, 107,   0,  95, 126, 116, 118, 118, 118, 118, 118, 118, 118, 
			 18,  18,  18,  18,  18,  18,  19,  15,  33,  51,  50, 158, 203,  33, 121, 207,  85, 142, 159, 109, 149, 145,  84,  74,  77,  76,  76,  76,  76,  76,  76,  76, 
			104, 104, 104, 104, 104, 104, 104, 103, 108, 125, 154, 158, 118,  62, 119, 192, 158,  62, 108, 162, 162, 255, 135,   0,  27,  20,  20,  20,  20,  20,  20,  20, 
			255, 255, 255, 255, 255, 255, 255, 255, 252, 255, 233, 198, 179, 125, 255, 182, 136, 131, 157, 226, 242, 155,  42,  89,  79,  80,  80,  80,  80,  80,  80,  80, 
			 90,  90,  90,  90,  90,  90,  95,  64, 194, 184, 108, 185, 187, 248, 201, 118, 165,  88, 155, 130,  65, 149, 155, 210, 197, 200, 200, 200, 200, 200, 200, 200, 
			 28,  28,  28,  28,  28,  28,  32,   6, 115, 130,  63,  73,   0, 164, 131,  30,  86,   3, 171, 201,  46, 157, 233, 177, 189, 188, 188, 188, 188, 188, 188, 188, 
			227, 227, 227, 227, 227, 227, 225, 239, 172, 225, 203, 108,  88,  78, 161, 140, 110, 109, 159, 237, 102, 138, 214, 115, 137, 134, 134, 134, 134, 134, 134, 134, 
			105, 105, 105, 105, 105, 105, 107,  98, 134, 171, 168, 232, 141,   0, 118, 130, 147, 166,  99, 192, 123,  95, 134,  87,  97,  95,  95,  95,  95,  95,  95,  95, 
			 31,  31,  31,  31,  31,  31,  35,  16,  89, 175, 139, 119,  72,  81, 165,  50,  67, 117,   0,  80, 105,   0, 119, 232, 203, 209, 209, 209, 209, 209, 209, 209, 
			 44,  44,  44,  44,  44,  44,  47,  37,  67, 255, 203,   0, 116, 131, 109, 130,  18, 115, 102,  74, 120, 141, 194, 178, 181, 181, 181, 181, 181, 181, 181, 181, 
			 78,  78,  78,  78,  78,  78,  81,  65, 134, 134, 157, 112, 161, 205,  29,  97, 108, 162, 180, 115, 122, 201, 208, 122, 142, 139, 139, 139, 139, 139, 139, 139, 
			221, 221, 221, 221, 221, 221, 220, 221, 225, 132,  95, 205, 161, 230,  92, 121, 184, 100, 212, 183, 107, 128, 247, 226, 229, 229, 229, 229, 229, 229, 229, 229, 
			 93,  93,  93,  93,  93,  93,  95,  90,  98, 232, 167, 113, 122,  60, 110, 119,  61,  76, 129,  95, 162, 176, 149, 166, 163, 163, 163, 163, 163, 163, 163, 163, 
			 72,  72,  72,  72,  72,  72,  73,  71,  75, 169, 251, 198, 150, 130, 202, 175, 104,  94,  53, 120, 125, 114, 124, 104, 108, 107, 107, 107, 107, 107, 107, 107, 
			142, 142, 142, 142, 142, 142, 141, 152, 103, 140, 246, 245, 172, 222, 230, 231, 232, 153, 154, 246, 120,  68, 187, 123, 136, 134, 134, 134, 134, 134, 134, 134, 
			125, 125, 125, 125, 125, 125, 125, 133,  97, 148, 246, 233, 166, 198, 222, 218, 201, 139, 131, 216, 122,  80, 172, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected22, cropImage(extractBand(actual, 2, 2, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel32() throws Exception {
		int[] expected32 = new int[] {
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			163, 163, 163, 163, 163, 163, 164, 158, 215, 235,  80,  92, 185, 205, 249, 115,  62, 142, 107, 117, 205, 199,  96,  68,  75,  73,  73,  73,  73,  73,  73,  73, 
			187, 187, 187, 187, 187, 187, 188, 181, 242, 239,  73, 104, 214, 230, 255, 128,  30, 143,  96, 110, 237, 211,  82,  53,  61,  59,  59,  59,  59,  59,  59,  59, 
			 87,  87,  87,  87,  87,  87,  88,  86, 110, 184, 103,  51, 101, 132, 111,  74, 167, 137, 135, 132, 103, 174, 141, 112, 119, 117, 117, 117, 117, 117, 117, 117, 
			 45,  45,  45,  45,  45,  45,  45,  50,  11, 101,  87, 139,  32,  12,  87,  89, 131, 161, 220, 236,  60,  25, 107, 122, 117, 118, 118, 118, 118, 118, 118, 118, 
			 18,  18,  18,  18,  18,  18,  19,  17,  40,  51,  69, 183, 167,  26, 172, 166,  94, 156, 143, 115, 157, 127,  80,  75,  77,  76,  76,  76,  76,  76,  76,  76, 
			104, 104, 104, 104, 104, 104, 104, 104, 112, 132, 158, 149, 105,  66, 147, 183, 141,  54, 140, 150, 193, 252,  78,  10,  24,  20,  20,  20,  20,  20,  20,  20, 
			255, 255, 255, 255, 255, 255, 255, 255, 249, 255, 203, 213, 151, 156, 255, 146, 156, 114, 195, 215, 245, 105,  61,  85,  80,  80,  80,  80,  80,  80,  80,  80, 
			 90,  90,  90,  90,  90,  90,  93,  77, 224, 139, 140, 181, 201, 248, 173, 126, 163,  75, 187,  79, 108, 137, 178, 205, 199, 200, 200, 200, 200, 200, 200, 200, 
			 28,  28,  28,  28,  28,  28,  30,  17, 144,  96,  75,  51,  11, 202,  66,  70,  54,  34, 202, 155,  58, 196, 211, 183, 189, 188, 188, 188, 188, 188, 188, 188, 
			227, 227, 227, 227, 227, 227, 226, 233, 164, 240, 157, 118,  70, 106, 158, 130, 110, 118, 179, 223,  77, 188, 174, 125, 136, 134, 134, 134, 134, 134, 134, 134, 
			105, 105, 105, 105, 105, 105, 106, 102, 149, 170, 179, 228,  92,  18, 142, 112, 174, 136, 121, 192,  95, 120, 115,  91,  96,  95,  95,  95,  95,  95,  95,  95, 
			 31,  31,  31,  31,  31,  31,  33,  24, 121, 167, 132, 113,  64, 105, 152,  27, 103,  78,   5, 104,  72,  13, 164, 221, 206, 209, 209, 209, 209, 209, 209, 209, 
			 44,  44,  44,  44,  44,  44,  46,  41, 105, 255, 132,   8, 148, 100, 136,  94,  31, 134,  74, 100, 114, 163, 188, 180, 181, 181, 181, 181, 181, 181, 181, 181, 
			 78,  78,  78,  78,  78,  78,  80,  72, 152, 120, 173,  90, 206, 147,  37, 115, 102, 190, 148, 127, 126, 224, 174, 131, 141, 139, 139, 139, 139, 139, 139, 139, 
			221, 221, 221, 221, 221, 221, 221, 221, 211, 109, 123, 209, 152, 242,  46, 188, 119, 155, 191, 181,  88, 174, 238, 228, 229, 229, 229, 229, 229, 229, 229, 229, 
			 93,  93,  93,  93,  93,  93,  94,  92, 121, 244, 123, 141,  88,  80, 108, 114,  49, 101, 117, 106, 176, 163, 156, 165, 163, 163, 163, 163, 163, 163, 163, 163, 
			 72,  72,  72,  72,  72,  72,  73,  72,  91, 198, 242, 182, 148, 137, 215, 142, 112,  77,  66, 131, 115, 123, 116, 106, 108, 107, 107, 107, 107, 107, 107, 107, 
			142, 142, 142, 142, 142, 142, 142, 147,  98, 176, 246, 234, 168, 239, 209, 243, 198, 162, 161, 250,  65, 125, 161, 129, 135, 134, 134, 134, 134, 134, 134, 134, 
			125, 125, 125, 125, 125, 125, 125, 129,  97, 182, 243, 221, 161, 219, 209, 226, 177, 142, 139, 222,  78, 125, 151, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected32, cropImage(extractBand(actual, 3, 2, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel03() throws Exception {
		int[] expected03 = new int[] {
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 167, 167, 167, 241, 217,  42, 130, 200, 216, 254,  67,  77, 152,  85, 140, 226, 179,  71,  71,  71,  71,  71,  71,  71,  71,  71, 
			165, 165, 165, 165, 165, 165, 165, 165, 165, 238, 216,  43, 129, 197, 214, 250,  68,  80, 152,  87, 140, 223, 179,  72,  72,  72,  72,  72,  72,  72,  72,  72, 
			177, 177, 177, 177, 177, 177, 177, 177, 177, 248, 220,  39, 139, 212, 227, 255,  66,  64, 157,  77, 142, 241, 179,  65,  65,  65,  65,  65,  65,  65,  65,  65, 
			 55,  55,  55,  55,  55,  55,  55,  55,  55,  71, 171,  76,  54,  66,  88,  52,  84, 218, 110, 181, 128,  58, 172, 132, 132, 132, 132, 132, 132, 132, 132, 132, 
			 59,  59,  59,  59,  59,  59,  59,  59,  59,  31, 113,  69, 197,   7,  30, 163,  91,  98, 188, 220, 227,  55,  31,  97,  97,  97,  97,  97,  97,  97,  97,  97, 
			 10,  10,  10,  10,  10,  10,  10,  10,  10,  50,  54, 108, 170, 158,  20, 193, 140, 141, 130, 115,  82, 183, 169,  74,  74,  74,  74,  74,  74,  74,  74,  74, 
			169, 169, 169, 169, 169, 169, 169, 169, 169, 157, 190, 169, 168,  57, 104, 202, 164, 100,  52, 209, 192, 228, 205,  13,  13,  13,  13,  13,  13,  13,  13,  13, 
			233, 233, 233, 233, 233, 233, 233, 233, 233, 250, 246, 169, 220, 183, 202, 242, 100, 213, 102, 214, 142, 237,  44, 127, 127, 127, 127, 127, 127, 127, 127, 127, 
			 51,  51,  51,  51,  51,  51,  51,  51,  51, 239,  50, 162, 143, 156, 251,  98, 147,  95,  43, 236,  41, 115, 179, 192, 192, 192, 192, 192, 192, 192, 192, 192, 
			 79,  79,  79,  79,  79,  79,  79,  79,  79, 158, 128,  73,  30,  18, 216,  22,  89,  53,  93, 217, 140,  75, 218, 183, 183, 183, 183, 183, 183, 183, 183, 183, 
			225, 225, 225, 225, 225, 225, 225, 225, 225, 167, 251, 146, 177,  64, 106, 188, 140, 123, 115, 194, 207,  41, 240, 116, 116, 116, 116, 116, 116, 116, 116, 116, 
			 53,  53,  53,  53,  53,  53,  53,  53,  53, 153, 144, 171, 188,  29,  44, 132,  50, 208, 100, 107, 176,  78,  93, 119, 119, 119, 119, 119, 119, 119, 119, 119, 
			 61,  61,  61,  61,  61,  61,  61,  61,  61, 157, 202, 111,  89,  95, 143, 167,  25,  97,  41,   6, 122,  28,  63, 220, 220, 220, 220, 220, 220, 220, 220, 220, 
			 25,  25,  25,  25,  25,  25,  25,  25,  25, 139, 247,  72,  12, 195,  39, 123,  69,  63, 200,  73, 135, 144, 213, 155, 155, 155, 155, 155, 155, 155, 155, 155, 
			131, 131, 131, 131, 131, 131, 131, 131, 131, 186,  65, 213, 111, 243, 152,  35, 169,  87, 190, 120, 139,  93, 235, 166, 166, 166, 166, 166, 166, 166, 166, 166, 
			197, 197, 197, 197, 197, 197, 197, 197, 197, 181, 147, 101, 211, 101, 222,   2, 248,  43, 222, 174, 181, 104, 212, 223, 223, 223, 223, 223, 223, 223, 223, 223, 
			 70,  70,  70,  70,  70,  70,  70,  70,  70, 135, 249, 129, 154,  82,  86, 157,  70,  54,  77,  75,  98, 183, 131, 138, 138, 138, 138, 138, 138, 138, 138, 138, 
			100, 100, 100, 100, 100, 100, 100, 100, 100, 101, 221, 237, 188, 152, 194, 212, 175, 138, 104, 115, 187,  67, 151, 118, 118, 118, 118, 118, 118, 118, 118, 118, 
			135, 135, 135, 135, 135, 135, 135, 135, 135,  94, 213, 244, 217, 161, 250, 192, 248, 160, 159, 159, 243,  20, 176, 132, 132, 132, 132, 132, 132, 132, 132, 132, 
			127, 127, 127, 127, 127, 127, 127, 127, 127,  96, 216, 241, 210, 157, 242, 196, 238, 154, 146, 149, 230,  32, 170, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 128, 128,  95, 215, 242, 211, 158, 244, 196, 241, 155, 148, 150, 232,  29, 171, 129, 129, 129, 129, 129, 129, 129, 129, 129 
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected03, cropImage(extractBand(actual, 0, 3, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel13() throws Exception {
		int[] expected13 = new int[] {
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 185, 248, 166,  50, 156, 202, 236, 210,  52, 105, 138,  88, 167, 226, 148,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			165, 165, 165, 165, 165, 165, 166, 160, 183, 245, 165,  50, 154, 199, 233, 206,  52, 107, 137,  90, 167, 222, 147,  66,  74,  72,  72,  72,  72,  72,  72,  72, 
			177, 177, 177, 177, 177, 177, 178, 172, 195, 255, 169,  47, 164, 213, 246, 211,  51,  91, 142,  79, 169, 240, 147,  59,  67,  65,  65,  65,  65,  65,  65,  65, 
			 55,  55,  55,  55,  55,  55,  55,  58,  44, 108, 165,  62,  43,  75,  78,  58, 139, 184, 129, 181,  80,  88, 181, 129, 132, 132, 132, 132, 132, 132, 132, 132, 
			 59,  59,  59,  59,  59,  59,  58,  61,  50,  46,  94, 126, 153,   0,  91, 146,  57, 139, 192, 234, 201,  20,  44, 102,  96,  97,  97,  97,  97,  97,  97,  97, 
			 10,  10,  10,  10,  10,  10,  11,   9,  24,  50,  72, 108, 194, 111,  45, 200, 149, 119, 133,  92, 114, 210, 129,  64,  77,  74,  74,  74,  74,  74,  74,  74, 
			169, 169, 169, 169, 169, 169, 168, 172, 156, 170, 173, 182, 120,  68, 140, 192, 143,  80,  99, 213, 188, 219, 162,  10,  15,  13,  13,  13,  13,  13,  13,  13, 
			233, 233, 233, 233, 233, 233, 234, 230, 244, 250, 224, 175, 234, 175, 213, 196, 142, 183, 122, 181, 184, 191,  65, 139, 125, 127, 127, 127, 127, 127, 127, 127, 
			 51,  51,  51,  51,  51,  51,  55,  45, 120, 188,  72, 167, 122, 210, 202, 118, 128,  80, 115, 202,  21, 161, 175, 186, 193, 192, 192, 192, 192, 192, 192, 192, 
			 79,  79,  79,  79,  79,  79,  79,  79,  77, 180,  99,  60,  15,  72, 189,  16,  96,  58, 115, 221, 107, 102, 221, 180, 184, 183, 183, 183, 183, 183, 183, 183, 
			225, 225, 225, 225, 225, 225, 224, 229, 208, 186, 234, 161, 146,  45, 148, 183, 131, 109, 131, 219, 148,  92, 220, 103, 118, 116, 116, 116, 116, 116, 116, 116, 
			 53,  53,  53,  53,  53,  53,  55,  53,  90, 155, 146, 182, 151,  25,  69,  97, 103, 195,  77, 134, 169,  54, 117, 126, 117, 119, 119, 119, 119, 119, 119, 119, 
			 61,  61,  61,  61,  61,  61,  62,  58,  72, 191, 172,  90, 105, 100, 163, 131,  17, 101,  21,  40, 102,  33, 102, 227, 218, 220, 220, 220, 220, 220, 220, 220, 
			 25,  25,  25,  25,  25,  25,  27,  22,  49, 181, 220,  30,  74, 153,  42, 132,  55, 115, 172,  71, 143, 167, 188, 147, 157, 155, 155, 155, 155, 155, 155, 155, 
			131, 131, 131, 131, 131, 131, 131, 127, 150, 128, 114, 203, 121, 253,  89,  77, 146, 100, 185, 129, 109, 131, 240, 162, 167, 166, 166, 166, 166, 166, 166, 166, 
			197, 197, 197, 197, 197, 197, 197, 198, 190, 204,  98, 141, 174, 137, 168,  63, 200,  80, 222, 172, 168, 116, 220, 223, 223, 223, 223, 223, 223, 223, 223, 223, 
			 70,  70,  70,  70,  70,  70,  72,  67,  82, 172, 241, 115, 149,  60, 130, 119,  70,  48,  77,  78, 128, 173, 126, 139, 138, 138, 138, 138, 138, 138, 138, 138, 
			100, 100, 100, 100, 100, 100, 100, 104,  85, 127, 237, 234, 167, 174, 184, 224, 157, 131,  97, 150, 132,  91, 153, 113, 119, 118, 118, 118, 118, 118, 118, 118, 
			135, 135, 135, 135, 135, 135, 135, 139, 120, 120, 229, 241, 195, 183, 240, 204, 231, 153, 152, 194, 188,  44, 178, 127, 132, 132, 132, 132, 132, 132, 132, 132, 
			127, 127, 127, 127, 127, 127, 126, 131, 111, 122, 232, 238, 189, 180, 232, 208, 220, 147, 139, 184, 175,  56, 172, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132, 113, 121, 231, 239, 190, 181, 234, 208, 224, 149, 141, 186, 177,  53, 173, 124, 130, 129, 129, 129, 129, 129, 129, 129 
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected13, cropImage(extractBand(actual, 1, 3, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
		
	public void testQPel23() throws Exception {
		int[] expected23 = new int[] {
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 169, 157, 202, 255, 115,  57, 181, 203, 255, 166,  36, 132, 123,  90, 194, 225, 116,  59,  74,  71,  71,  71,  71,  71,  71,  71, 
			165, 165, 165, 165, 165, 165, 167, 155, 199, 255, 116,  57, 179, 201, 253, 164,  39, 133, 124,  92, 192, 223, 117,  61,  76,  72,  72,  72,  72,  72,  72,  72, 
			177, 177, 177, 177, 177, 177, 179, 166, 215, 255, 113,  59, 193, 213, 255, 178,  23, 128, 123,  83, 206, 235, 111,  53,  69,  65,  65,  65,  65,  65,  65,  65, 
			 55,  55,  55,  55,  55,  55,  56,  56,  48, 134, 139,  49,  56,  85,  73,  43, 171, 169, 133, 179,  69, 113, 168, 124, 133, 132, 132, 132, 132, 132, 132, 132, 
			 59,  59,  59,  59,  59,  59,  58,  65,  33,  78,  80, 152, 110,   0, 117, 144,  71, 142, 209, 241, 146,  14,  66, 106,  95,  97,  97,  97,  97,  97,  97,  97, 
			 10,  10,  10,  10,  10,  10,  12,   8,  31,  52,  72, 143, 192,  62,  96, 192, 130, 139, 128,  84, 128, 200, 117,  63,  77,  74,  74,  74,  74,  74,  74,  74, 
			169, 169, 169, 169, 169, 169, 168, 171, 158, 174, 181, 180, 110,  53, 165, 201, 135,  49, 130, 209, 200, 235, 105,   0,  19,  13,  13,  13,  13,  13,  13,  13, 
			233, 233, 233, 233, 233, 233, 234, 230, 242, 255, 213, 187, 210, 176, 248, 160, 155, 160, 153, 178, 204, 144,  58, 144, 125, 127, 127, 127, 127, 127, 127, 127, 
			 51,  51,  51,  51,  51,  51,  57,  32, 172, 154,  79, 174, 127, 227, 179, 105, 144,  44, 162, 157,  40, 161, 191, 191, 191, 192, 192, 192, 192, 192, 192, 192, 
			 79,  79,  79,  79,  79,  79,  81,  68, 120, 159, 100,  53,   0, 143, 135,  31,  84,  49, 169, 205,  75, 145, 220, 174, 184, 183, 183, 183, 183, 183, 183, 183, 
			225, 225, 225, 225, 225, 225, 223, 235, 181, 221, 208, 160, 126,  58, 162, 175, 126, 109, 147, 238,  95, 135, 208,  94, 120, 116, 116, 116, 116, 116, 116, 116, 
			 53,  53,  53,  53,  53,  53,  56,  49, 105, 158, 146, 203, 110,   4, 110,  79, 130, 178,  73, 159, 135,  68, 111, 122, 118, 119, 119, 119, 119, 119, 119, 119, 
			 61,  61,  61,  61,  61,  61,  64,  51, 101, 203, 162,  88,  87, 113, 181,  87,  49,  90,   2,  75,  91,  14, 149, 238, 215, 220, 220, 220, 220, 220, 220, 220, 
			 25,  25,  25,  25,  25,  25,  29,  19,  60, 238, 194,   0, 124, 129,  62, 116,  35, 150, 147,  85, 140, 184, 192, 145, 157, 155, 155, 155, 155, 155, 155, 155, 
			131, 131, 131, 131, 131, 131, 133, 120, 178, 111, 140, 165, 168, 230,  59, 103, 133, 134, 167, 128, 101, 167, 220, 153, 168, 166, 166, 166, 166, 166, 166, 166, 
			197, 197, 197, 197, 197, 197, 197, 198, 192, 172, 103, 169, 149, 181,  87, 124, 165, 104, 223, 179, 132, 146, 233, 221, 223, 223, 223, 223, 223, 223, 223, 223, 
			 70,  70,  70,  70,  70,  70,  73,  66,  85, 217, 197, 132, 126,  63, 135, 125,  46,  68,  79,  74, 150, 166, 126, 141, 138, 138, 138, 138, 138, 138, 138, 138, 
			100, 100, 100, 100, 100, 100, 100, 104,  86, 158, 249, 217, 159, 167, 213, 198, 155, 118,  94, 171, 124,  96, 149, 112, 119, 118, 118, 118, 118, 118, 118, 118, 
			135, 135, 135, 135, 135, 135, 134, 144, 100, 144, 247, 240, 170, 213, 227, 226, 219, 148, 144, 234, 121,  73, 181, 121, 133, 132, 132, 132, 132, 132, 132, 132, 
			127, 127, 127, 127, 127, 127, 126, 135,  97, 148, 247, 234, 167, 201, 223, 219, 204, 141, 133, 219, 122,  79, 173, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 127, 136,  97, 147, 247, 235, 168, 203, 224, 220, 206, 142, 134, 221, 122,  77, 174, 119, 130, 129, 129, 129, 129, 129, 129, 129 
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected23, cropImage(extractBand(actual, 2, 3, 192,
				192), 48, 48, 8, 8, 32, 32));

	}
		
	public void testQPel33() throws Exception {
		int[] expected33 = new int[] {
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			167, 167, 167, 167, 167, 167, 168, 162, 222, 236,  79,  94, 191, 210, 255, 117,  57, 142, 104, 115, 210, 202,  94,  65,  73,  71,  71,  71,  71,  71,  71,  71, 
			165, 165, 165, 165, 165, 165, 166, 160, 218, 235,  79,  92, 188, 207, 251, 117,  59, 142, 106, 115, 207, 202,  95,  66,  74,  72,  72,  72,  72,  72,  72,  72, 
			177, 177, 177, 177, 177, 177, 178, 172, 229, 239,  76, 102, 202, 220, 255, 116,  43, 147,  96, 117, 225, 202,  88,  59,  67,  65,  65,  65,  65,  65,  65,  65, 
			 55,  55,  55,  55,  55,  55,  55,  58,  63, 141, 103,  59,  70,  84,  62,  48, 195, 145, 146, 166,  75, 129, 145, 129, 132, 132, 132, 132, 132, 132, 132, 132, 
			 59,  59,  59,  59,  59,  59,  58,  61,  33, 105,  66, 165,  78,  12, 127, 141,  88, 148, 229, 222,  99,  39,  78, 102,  96,  97,  97,  97,  97,  97,  97,  97, 
			 10,  10,  10,  10,  10,  10,  11,   9,  38,  51,  90, 168, 156,  55, 147, 150, 138, 152, 112,  90, 135, 182, 113,  64,  77,  74,  74,  74,  74,  74,  74,  74, 
			169, 169, 169, 169, 169, 169, 168, 172, 162, 181, 185, 171,  97,  56, 193, 191, 118,  41, 161, 196, 231, 232,  48,  10,  15,  13,  13,  13,  13,  13,  13,  13, 
			233, 233, 233, 233, 233, 233, 234, 230, 239, 255, 183, 202, 181, 207, 248, 123, 175, 143, 191, 166, 207,  94,  77, 139, 125, 127, 127, 127, 127, 127, 127, 127, 
			 51,  51,  51,  51,  51,  51,  55,  45, 202, 108, 111, 170, 141, 226, 150, 113, 142,  31, 194, 106,  82, 148, 213, 186, 193, 192, 192, 192, 192, 192, 192, 192, 
			 79,  79,  79,  79,  79,  79,  79,  79, 149, 124, 112,  31,  11, 181,  69,  70,  52,  79, 200, 159,  87, 184, 198, 180, 184, 183, 183, 183, 183, 183, 183, 183, 
			225, 225, 225, 225, 225, 225, 224, 229, 173, 236, 162, 170, 107,  86, 159, 165, 126, 118, 167, 223,  69, 185, 168, 103, 118, 116, 116, 116, 116, 116, 116, 116, 
			 53,  53,  53,  53,  53,  53,  55,  53, 120, 157, 157, 199,  61,  22, 134,  60, 157, 148,  95, 158, 107,  93,  92, 126, 117, 119, 119, 119, 119, 119, 119, 119, 
			 61,  61,  61,  61,  61,  61,  62,  58, 132, 195, 155,  82,  79, 137, 167,  64,  85,  51,   7,  99,  57,  27, 194, 227, 218, 220, 220, 220, 220, 220, 220, 220, 
			 25,  25,  25,  25,  25,  25,  27,  22,  98, 238, 123,   8, 156,  98,  89,  80,  48, 169, 118, 111, 134, 206, 186, 147, 157, 155, 155, 155, 155, 155, 155, 155, 
			131, 131, 131, 131, 131, 131, 131, 127, 196,  96, 155, 142, 213, 172,  67, 121, 127, 161, 135, 140, 105, 190, 186, 162, 167, 166, 166, 166, 166, 166, 166, 166, 
			197, 197, 197, 197, 197, 197, 197, 198, 178, 148, 131, 172, 140, 192,  41, 191,  99, 159, 202, 176, 113, 192, 224, 223, 223, 223, 223, 223, 223, 223, 223, 223, 
			 70,  70,  70,  70,  70,  70,  72,  67, 107, 228, 153, 160,  92,  83, 133, 120,  34,  93,  66,  85, 164, 152, 133, 139, 138, 138, 138, 138, 138, 138, 138, 138, 
			100, 100, 100, 100, 100, 100, 100, 104, 102, 187, 240, 200, 157, 174, 226, 164, 163, 101, 107, 181, 113, 104, 141, 113, 119, 118, 118, 118, 118, 118, 118, 118, 
			135, 135, 135, 135, 135, 135, 135, 139,  95, 179, 247, 229, 166, 229, 206, 238, 185, 156, 151, 238,  66, 129, 154, 127, 132, 132, 132, 132, 132, 132, 132, 132, 
			127, 127, 127, 127, 127, 127, 126, 131,  97, 182, 244, 222, 162, 221, 210, 227, 179, 143, 141, 224,  78, 123, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129, 
			128, 128, 128, 128, 128, 128, 128, 132,  96, 181, 245, 223, 163, 224, 210, 231, 181, 145, 142, 227,  76, 124, 152, 124, 130, 129, 129, 129, 129, 129, 129, 129 
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateLuma(data, 16, 16);

		assertArrayEquals(expected33, cropImage(extractBand(actual, 3, 3, 192,
				192), 48, 48, 8, 8, 32, 32));
	}
	
	public void testChroma1() throws Exception {
		int[] fullPel = new int[] {
			103, 198, 105, 115,  81, 255,  74, 236,  41, 205, 186, 171, 242, 251, 227,  70, 
			124, 194,  84, 248,  27, 232, 231, 141, 118,  90,  46,  99,  51, 159, 201, 154, 
			102,  50,  13, 183,  49,  88, 163,  90,  37,  93,   5,  23,  88, 233,  94, 212, 
			171, 178, 205, 198, 155, 180,  84,  17,  14, 130, 116,  65,  33,  61, 220, 135, 
			112, 233,  62, 161,  65, 225, 252, 103,  62,   1, 126, 151, 234, 220, 107, 150, 
			143,  56,  92,  42, 236, 176,  59, 251,  50, 175,  60,  84, 236,  24, 219,  92, 
			  2,  26, 254,  67, 251, 250, 170,  58, 251,  41, 209, 230,   5,  60, 124, 148, 
			117, 216, 190,  97, 137, 249,  92, 187, 168, 153,  15, 149, 177, 235, 241, 179, 
			  5, 239, 247,   0, 233, 161,  58, 229, 202,  11, 203, 208,  72,  71, 100, 189, 
			 31,  35,  30, 168,  28, 123, 100, 197,  20, 115,  90, 197,  94,  75, 121,  99, 
			 59, 112, 100,  36,  17, 158,   9, 220, 170, 212, 172, 242,  27,  16, 175,  59, 
			 51, 205, 227,  80,  72,  71,  21,  92, 187, 111,  34,  25, 186, 155, 125, 245, 
			 11, 225,  26,  28, 127,  35, 248,  41, 248, 164,  27,  19, 181, 202,  78, 232, 
			152,  50,  56, 224, 121,  77,  61,  52, 188,  95,  78, 119, 250, 203, 108,   5, 
			172, 134,  33,  43, 170,  26,  85, 162, 190, 112, 181, 115,  59,   4,  92, 211, 
			 54, 148, 179, 175, 226, 240, 228, 158,  79,  50,  21,  73, 253, 130,  78, 169
		};
		
		int[] expected = new int[] {
			149, 154, 141, 157, 109, 226, 189, 136, 107,  89,  80,  96, 111, 183, 181, 144, 
			 91,  51,  85, 137,  69, 131, 143,  78,  64,  62,  19,  52, 136, 180, 144, 205, 
			162, 169, 187, 176, 152, 141,  68,  23,  58, 117,  86,  52,  56, 128, 182, 145, 
			159, 171, 112, 132, 130, 224, 179,  79,  41,  57, 131, 166, 206, 171, 131, 148, 
			116,  82,  76, 116, 202, 145, 139, 165,  90, 121,  77, 146, 166, 107, 165,  99, 
			 23, 106, 170, 133, 246, 209, 128, 136, 163, 107, 198, 145,  42,  86, 138, 141, 
			136, 194, 159, 115, 188, 194, 128, 174, 164, 102,  84, 158, 177, 218, 207, 175, 
			100, 238, 154,  90, 203, 131, 123, 214, 134,  85, 187, 157,  88, 101, 144, 188, 
			 40,  59,  91, 112,  81, 115, 135, 142,  65, 103, 139, 158,  85,  91, 115, 110, 
			 73,  98,  77,  40,  69, 104,  94, 192, 169, 186, 190, 161,  31,  78, 129,  64, 
			105, 200, 160,  71,  71,  58,  53, 137, 162,  96,  52,  95, 155, 135, 165, 222, 
			 93, 158,  45,  67,  90, 107, 155, 120, 209, 109,  25,  80, 187, 154, 140, 234, 
			111,  65, 107, 170, 103,  76,  72, 105, 161,  92,  85, 157, 227, 166,  78,  33, 
			152,  91,  47, 102, 115,  51, 107, 164, 160, 132, 148, 103,  63,  53, 128, 185, 
			 98, 152, 160, 181, 217, 212, 191, 134,  80,  51,  55, 135, 186, 101, 115, 174, 
			 89, 160, 178, 194, 231, 236, 202, 128,  68,  39,  41, 141, 207, 111, 112, 169
		};
		
		Interpolator interpolator = new Interpolator();
		int[] actual = interpolator.interpolateChroma(fullPel, 16, 16);
		assertArrayEquals(expected, extractBandChroma(actual, 3, 7, 128, 128));
		
	}
	
	private int[] extractBand(int[] source, int offX, int offY, int width, int height) {
		int[] result = new int[(width / 4)*(height / 4)];
		
		for(int j = 0; j < height; j += 4) {
			for(int i = 0; i < width; i += 4) {
				result[(j * width) / 16 + i / 4] = source[(j + offY)*width + i + offX];
			}
		}
		
		return result;
	}
	
	private int[] extractBandChroma(int[] source, int offX, int offY, int width, int height) {
		int[] result = new int[(width / 8)*(height / 8)];
		
		for(int j = 0; j < height; j += 8) {
			for(int i = 0; i < width; i += 8) {
				result[(j * width) / 64 + i / 8] = source[(j + offY)*width + i + offX];
			}
		}
		
		return result;
	}
	
	private int[] cropImage(int[] img, int width, int height, int x, int y,
			int nw, int nh) {
		int result[] = new int[nw * nh];

		for (int j = 0; j < nh; j++) {
			for (int i = 0; i < nw; i++) {
				result[j * nw + i] = img[(j + y) * width + i + x];
			}
		}

		return result;
	}

}